//ѕрограмма, замен€юща€ пробелы на пробелы и табул€ции так, чтобы вид текста не изменилс€
#include <stdio.h>
#define N 8     //Ўаг нашей табул€ции в пробелах

int k = 0;      //„ерез k*N задаЄтс€ координата "стопа" таюул€ции
int place = 0;
int In = 0;
int Out = 0;

void SpaceMaker(int count){     //ѕечатает заданное количество пробелов
    for (int i = 0; i < count; i++)
        putchar(' ');
}

void TabMaker(){
    k = In/N + 1;       //k - первый "стоп" табул€ции после In

    for (k; Out >= k*N; k++)    //¬ставл€ем между In и Out столько табул€ций, сколько возможно
        putchar('\t');
    if (k != In/N + 1)          //» если хоть одна табул€ци€ была вставлена исправл€ем k, т.к. он стал на 1 больше
        k--;                    //чем последний "стоп" перед Out
}

int Choosing(){
    int c;

    while ((c = getchar()) == ' ')      //Ќаходит "¬ыход из линии пробелов" (Out)
        place++;
    Out = place;

    TabMaker();     //¬ставл€ет максимально возможное число табул€ций вместо пробелов
    if (Out >= k*N)
        SpaceMaker(Out - k*N);      //¬ставл€ет оставшиес€ пробелы после табул€ций
    else
        SpaceMaker(Out - In + 1);   //¬ставл€ет пробелы, если табул€ций не было

    putchar(c);
    place++;
}

main(){
    int c;
    while ((c = getchar()) != '0')
        if (c == ' '){
            place++;
            In = place;     // —читывает "¬ход в линию пробелов"
            Choosing();     // –ешает, что нам ставить, пробелы || табул€ции и пробелы
        }
        else{
            place++;
            putchar(c);
        }

    return 0;
}
